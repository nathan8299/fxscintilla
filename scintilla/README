README for building of FXScintilla and FXSciTE

FXScintilla can be built by itself.
To build FXSciTE, FXScintilla must first be built.


*** Linux version ***

You must first have FOX 0.99.177+ and GCC (2.8 or better) installed.
Other C++ compilers may work but may require tweaking the make file.

To build FXScintilla, use the makefile located in the scintilla/fox directory
(you may have to first edit the makefile to change the value of FOX_prefix)
	cd scintilla/fox
	make
	cd ../..
	
To build and install FXSciTE, use the makefile located in the scite/fox directory
(you may have to first edit the makefile to change the value of FOX_prefix)
	cd scite/fox
	make
	make install

This installs FXSciTE into $prefix/bin. The value of $prefix is determined from
the location of Gnome if it is installed. This is usually /usr if installed
with Linux or /usr/local if built from source. If Gnome is not installed
/usr/bin is used as the prefix. The prefix can be overridden on the command
line like "make prefix=/opt" but the same value should be used for both make
and make install as this location is compiled into the executable. The global
properties file is installed at $prefix/share/scite/SciTEGlobal.properties.
The language specific properties files are also installed into this directory.

If Gnome is installed then a .desktop file and icon are installed into the
correct Gnome places so that FXSciTE will be in the Gnome Applications menu.

To remove FXSciTE
	make uninstall
	
To clean the object files which may be needed to change $prefix
	make clean
	
The current make file only supports static linking between FXSciTE and FXScintilla.


*** Windows version ***

Only FXScintilla is currently available under Windows.
You must first have FOX 0.99.177+ and Visual C++ 6.0 installed.
Other C++ compilers may work but may require tweaking the make file.

To build FXScintilla, use the makefile scintilla\fox\scintilla.mak with nmake
(you may have to first edit the makefile to change the value of FOX_TOP)
	cd scintilla\fox
	nmake /f scintilla.mak
That should build the static lib scintilla/bin/scintilla-static.lib


*** Usage ***

here is a rough sample of how to integrate FXScintilla into a FOX app

//=======================================================
#include <fx.h>
#include <Scintilla.h>
#include <FXScintilla.h>

int main(int argc, char ** argv)
{
	FXApp application("test");
	application.init(argc, argv);
	FXMainWindow win(&application, "Test");

	// Instanciating an FXScintilla widget
	FXScintilla scint(&win, NULL, 0, LAYOUT_FILL_X|LAYOUT_FILL_Y);

  // The Scintilla programming interface is through messages
	// à la Windows (see scintilla/doc/ScintillaDoc.html)
	scint.sendMessage(SCI_STYLESETFONT, STYLE_DEFAULT, (long)"lucida");
	scint.sendMessage(SCI_STYLESETSIZE, STYLE_DEFAULT, (long)10);
	scint.sendMessage(SCI_STYLECLEARALL, 0, 0);

	application.create();
	win.show(PLACEMENT_SCREEN);
	application.run();
	return 0;
}
//=======================================================
